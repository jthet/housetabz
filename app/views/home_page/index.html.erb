<% if current_user.nil? %>
  <section class="bg-green-500">
  <div class="flex flex-col items-center justify-center h-2/3">
    <div class="w-full text-center">
      <h1 class="text-7xl font-bold mb-2 wave-effect">Hi, Welcome to HouseTabz</h1>
      <h3 class="text-5xl mt-5">The Best Way To Split Your House Tabs</h3>
    </div>
  </div>
</section>
<section class="bg-green-800 text-white py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/3">
      <img src="/images/celebrate.png" alt="Roommates celebrating">
    </div>
    <div class="w-1/2 flex items-center justify-end">
      <p class="text-3xl text-center font-bold text-gray-200">Never Worry<br>About Splitting<br> Bills With Roommates<br>Again</p>
    </div>
  </div>
</section>

<section class="bg-blue-600 text-white py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/3">
      <img src="/images/makeitrain.png" alt="Roommate with a lot of money because he isn't covering the bills.">
    </div>
    <div class="w-1/2 flex items-center justify-end">
      <p class="text-3xl text-center font-bold text-green-200">We Front The <br>Bills So You <br>Don't Have To  <br> <!-- Add a line break here -->
      <a href="#" class="text-lg text-green-200 font-semibold">Learn More</a></p>
     
    </div>
  </div>
</section>

<section class="bg-fuchsia-950 text-white py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/3">
      <img src="/images/moneytrack.png" alt="Guy tracking his bills">
    </div>
    <div class="w-1/2 flex items-center justify-end">
      <p class="text-3xl text-center font-bold text-yellow-400">Effortlessly Track<br>Payments and Bills</p>
    </div>
  </div>
</section>






<style>
.wave-effect {
  animation: wave 2s infinite;
}

@keyframes wave {
  0% { transform: translateX(-10px); }
  50% { transform: translateX(10px); }
  100% { transform: translateX(-10px); }
}
</style>

<% else %>
  <% if current_user.house.nil? %>
    <!-- Code for users without a house -->
  <% else %>
    <div class="flex justify-center">
      <div class="w-1/2 mt-40">
        <div class="flex">
          <div class="w-1/2">
            <h2 class="text-2xl font-bold">
              <strong><%= current_user.house.name %></strong>: $<%= current_user.house.total_charge.to_f.ceil(2) %>
            </h2>
            <canvas id="donutChart" style="max-width: 300px;"></canvas>
          </div>
          <div class="w-1/2">
            <h2 class="text-2xl font-bold">
              <strong>My Tab:</strong> $<%= current_user.balance&.amount.to_f.ceil(2) %>
            </h2>
            <canvas id="billsChart" style="max-width: 300px;"></canvas>
          </div>
        </div>
        <div class="flex justify-end mt-4">
          <a href="/checkout" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
            Make Payment
          </a>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const donutChartCanvas = document.getElementById('donutChart');
        const billsChartCanvas = document.getElementById('billsChart');
        
        const houseMembers = <%= current_user.house.users.map { |user| user.profile&.first_name }.to_json.html_safe %>;
        const backgroundColor = <%= current_user.house.users.map { |user| user.balance&.amount.to_f.ceil(2) == 0 ? 'green' : 'red' }.to_json.html_safe %>;
        const data = Array(houseMembers.length).fill(1);

        new Chart(donutChartCanvas, {
          type: 'doughnut',
          data: {
            labels: houseMembers.map((user) => `${user}`),
            datasets: [
              {
                data: data,
                backgroundColor: backgroundColor,
              },
            ],
          },
          options: {
            // Customize chart options and styling here
          },
        });

        <% if current_user.charges.present? %>
  const chargeNames = <%= current_user.charges.pluck(:name).to_json.html_safe %>;
  const chargeAmounts = <%= current_user.charges.pluck(:amount).to_json.html_safe %>;
  const backgroundColors = ['blue', 'orange', 'purple']; // Update with appropriate colors

  new Chart(billsChartCanvas, {
    type: 'doughnut',
    data: {
      labels: chargeNames,
      datasets: [
        {
          data: chargeAmounts,
          backgroundColor: backgroundColors,
        },
      ],
    },
    options: {
      // Customize chart options and styling here
    },
  });
<% end %>

      });
    </script>
  <% end %>
<% end %>
