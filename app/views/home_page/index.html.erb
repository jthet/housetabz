<% if current_user.nil? %>
<section class="bg-slate-950 text-purple-900 py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/2">
      <h1 class="text-5xl font-bold mb-8 wave-effect" style="text-shadow: 2px 2px 4px rgba(255, 255, 255, 0.5);">
        Welcome to HouseTabz
      </h1>
      <p class="text-2xl">The Ultimate House Expense Manager</p>
    </div>
  
  </div>
</section>

<section class="bg-blue-900 text-white py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/2">
      <h1 class="text-5xl font-bold mb-8">Conquer Your House Bills</h1>
      <p class="text-2xl">HouseTabz is the ultimate tool to manage shared expenses. Say goodbye to financial chaos and hello to easy bill splitting.</p>
      <a href="/about" class="btn-primary inline-block px-6 py-3 mt-8 text-lg font-semibold rounded-full bg-green-500 text-white">Learn More</a>
    </div>
    <div class="w-1/2">
      <img src="/images/makeitrain.png" alt="Roommate with a lot of money because he isn't covering the bills.">
    </div>
  </div>
</section>

<section class="bg-green-900 text-white py-80">
  <div class="flex justify-center container mx-auto">
    <div class="w-1/2">
      <h1 class="text-5xl font-bold mb-8">Unleash the Power of HouseTabz</h1>
      <p class="text-2xl">Harness the futuristic technology of HouseTabz to effortlessly track payments, split bills, and dominate your financial game. Join the HouseTabz fraternity today!</p>
    </div>
    <div class="w-1/2">
      <img src="/images/moneytrack.png" alt="Guy tracking his bills">
    </div>
  </div>
</section>

<style>
.wave-effect {
  animation: wave 2s infinite;
}

@keyframes wave {
  0% { transform: translateX(-10px); }
  50% { transform: translateX(10px); }
  100% { transform: translateX(-10px); }
}
</style>


<% else %>
  <% if current_user.house.nil? %>
    <!-- Code for users without a house -->
  <% else %>
    <div class="flex justify-center">
      <div class="w-1/2 mt-40">
        <div class="flex">
          <div class="w-1/2">
            <h2 class="text-2xl font-bold">
              <strong><%= current_user.house.name %></strong>: $<%= current_user.house.bills.select { |bill| bill.status == 'unpaid' && bill.amount.present? }.sum(&:amount).to_f.ceil(2) %>
            </h2>
            <canvas id="donutChart" style="max-width: 300px;"></canvas>
          </div>
          
          <div class="w-1/2">
            <h2 class="text-2xl font-bold">
              <strong>My Tab:</strong> $<%= current_user.balance&.amount.to_f.ceil(2) %>
            </h2>
            <canvas id="billsChart" style="max-width: 300px;"></canvas>
          </div>
        </div>
        <div class="flex justify-end mt-4">
          <a href="/checkout" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
            Make Payment
          </a>
        </div>
      </div>
    </div>

   <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const donutChartCanvas = document.getElementById('donutChart');
    const billsChartCanvas = document.getElementById('billsChart');

    const houseMembers = <%= current_user.house.users.map { |user| user.profile&.first_name }.to_json.html_safe %>;
    const donutBackgroundColor = <%= current_user.house.users.map { |user| user.paid_status ? 'green' : 'red' }.to_json.html_safe %>;
    const donutData = Array(houseMembers.length).fill(1);

    new Chart(donutChartCanvas, {
      type: 'doughnut',
      data: {
        labels: houseMembers.map((user) => `${user}`),
        datasets: [
          {
            data: donutData,
            backgroundColor: donutBackgroundColor,
          },
        ],
      },
      options: {
        // Customize donut chart options and styling here
      },
    });

  <% if current_user.charges.present? %>
  <% unpaid_charges = current_user.charges.where(status: 'unpaid') %>
  <% if unpaid_charges.any? %>
    <!-- Donut Chart Code Here -->
    const chargeNames = <%= unpaid_charges.pluck(:name).to_json.html_safe %>;
    const chargeAmounts = <%= unpaid_charges.pluck(:amount).to_json.html_safe %>;
    const billChartBackgroundColors = ['blue', 'orange', 'purple']; // Update with appropriate colors
  <% else %>
    <!-- Donut Chart Code Here -->
    const chargeNames = ['You have no current charges!'];
    const chargeAmounts = [100]; // Update with an appropriate value
    const billChartBackgroundColors = ['green']; // Update with an appropriate color
  <% end %>

  new Chart(billsChartCanvas, {
    type: 'doughnut',
    data: {
      labels: chargeNames,
      datasets: [
        {
          data: chargeAmounts,
          backgroundColor: billChartBackgroundColors,
        },
      ],
    },
    options: {
      // Customize bills chart options and styling here
    },
  });
<% end %>

  });
</script>

  <% end %>
<% end %>
